#!/usr/bin/env bash

    function format2digits() {
      if [[ $1 -gt 9 ]]; then echo $1; else echo 0$1; fi
    }

    function get_global_seconds() {
    }

    function print_header() {
      theSYSTEM="${theSYSTEM:-$(uname -s)}"
      if [[ ${theSYSTEM} != "Darwin" ]]; then
          uptime=$(</proc/uptime);                  # 42645.93 240538.58
          IFS=' ' read -ra uptime <<< "$uptime";    # 42645.93 240538.58
          uptime="${uptime[0]}";                    # 42645.93
          uptime=$(printf "%.0f\n" "$uptime")       # 42645
          uptime=$(TZ=UTC date -d "@${uptime}" "+%H:%M:%S");
      else 
          # https://stackoverflow.com/questions/15329443/proc-uptime-in-mac-os-x
          boottime=`sysctl -n kern.boottime | awk '{print $4}' | sed 's/,//g'`
		  unixtime=`date +%s`
		  timeAgo=$(($unixtime - $boottime))
          seconds1=$((timeAgo % 86400));
          seconds=$((seconds1 % 60));
          minutes1=$((seconds1 / 60));
          minutes=$((minutes1 % 60));
          hours=$((minutes1 / 60));
          # uptime=`awk -v time=$timeAgo 'BEGIN { seconds = time % 60; minutes = int(time / 60 % 60); hours = int(time / 60 / 60 % 24); days = int(time / 60 / 60 / 24); printf("%.0f days, %.0f hours, %.0f minutes, %.0f seconds", days, hours, minutes, seconds); exit }'`
          uptime="$(format2digits $hours):$(format2digits $minutes):$(format2digits $seconds)"
      fi
      black_circle='\xE2\x97\x8f'
      white_circle='\xE2\x97\x8b'
      # BUILD_DEFINITIONNAME
      # if [[ -z "$BUILD_DEFINITIONNAME" ]]; then 
      if [[ -z "$SAY_COLORLESS" ]]; then # skip colors for azure pipelines
        Blue='\033[1;34m'; Gray='\033[1;37m'; LightGreen='\033[1;32m'; Yellow='\033[1;33m'; RED='\033[0;31m'; NC='\033[0m'; LightGray='\033[1;2m';
      fi
      hostname="$(hostname 2>/dev/null)"
      hostname="${hostname:-$HOSTNAME}"
      printf "${Blue}${black_circle} ${hostname}${NC} ${LightGray}[${uptime:-}]${NC} ${LightGreen}$1${NC} ${Yellow}$2${NC}\n";
      echo "${hostname} ${uptime:-} $1 $2" >> "/tmp/Said-by-$(whoami).log" 2>/dev/null 
    }

    function SayIt() { 
      user="${LOGNAME:-$(whoami)}"
      file="/tmp/.${user}-said-counter"
      if [[ -e "$file" ]]; then counter=$(< "$file"); else counter=1; fi
      print_header "#${counter}" "$1";
      counter=$((counter+1));
      echo $counter > "$file"
    }; 

SayIt "$@"
